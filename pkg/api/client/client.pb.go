// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: client.proto

package client

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Film struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Film) Reset() {
	*x = Film{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Film) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Film) ProtoMessage() {}

func (x *Film) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Film.ProtoReflect.Descriptor instead.
func (*Film) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *Film) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Film) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FilmId  uint64 `protobuf:"varint,2,opt,name=filmId,proto3" json:"filmId,omitempty"`
	RoomId  uint64 `protobuf:"varint,3,opt,name=roomId,proto3" json:"roomId,omitempty"`
	PlaceId uint64 `protobuf:"varint,4,opt,name=placeId,proto3" json:"placeId,omitempty"`
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *Ticket) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ticket) GetFilmId() uint64 {
	if x != nil {
		return x.FilmId
	}
	return 0
}

func (x *Ticket) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Ticket) GetPlaceId() uint64 {
	if x != nil {
		return x.PlaceId
	}
	return 0
}

type UserAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserAuthRequest) Reset() {
	*x = UserAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthRequest) ProtoMessage() {}

func (x *UserAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthRequest.ProtoReflect.Descriptor instead.
func (*UserAuthRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

func (x *UserAuthRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserAuthResponse) Reset() {
	*x = UserAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthResponse) ProtoMessage() {}

func (x *UserAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthResponse.ProtoReflect.Descriptor instead.
func (*UserAuthResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

func (x *UserAuthResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type FilmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Desc   bool   `protobuf:"varint,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *FilmsRequest) Reset() {
	*x = FilmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmsRequest) ProtoMessage() {}

func (x *FilmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmsRequest.ProtoReflect.Descriptor instead.
func (*FilmsRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{4}
}

func (x *FilmsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FilmsRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FilmsRequest) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type FilmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Film *Film `protobuf:"bytes,1,opt,name=film,proto3" json:"film,omitempty"`
}

func (x *FilmsResponse) Reset() {
	*x = FilmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmsResponse) ProtoMessage() {}

func (x *FilmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmsResponse.ProtoReflect.Descriptor instead.
func (*FilmsResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{5}
}

func (x *FilmsResponse) GetFilm() *Film {
	if x != nil {
		return x.Film
	}
	return nil
}

type FilmRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmId uint64 `protobuf:"varint,1,opt,name=film_id,json=filmId,proto3" json:"film_id,omitempty"`
}

func (x *FilmRoomRequest) Reset() {
	*x = FilmRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmRoomRequest) ProtoMessage() {}

func (x *FilmRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmRoomRequest.ProtoReflect.Descriptor instead.
func (*FilmRoomRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{6}
}

func (x *FilmRoomRequest) GetFilmId() uint64 {
	if x != nil {
		return x.FilmId
	}
	return 0
}

type FilmRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Film *Film                  `protobuf:"bytes,1,opt,name=film,proto3" json:"film,omitempty"`
	Room *FilmRoomResponse_Room `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *FilmRoomResponse) Reset() {
	*x = FilmRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmRoomResponse) ProtoMessage() {}

func (x *FilmRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmRoomResponse.ProtoReflect.Descriptor instead.
func (*FilmRoomResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{7}
}

func (x *FilmRoomResponse) GetFilm() *Film {
	if x != nil {
		return x.Film
	}
	return nil
}

func (x *FilmRoomResponse) GetRoom() *FilmRoomResponse_Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type TicketCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmId  uint64 `protobuf:"varint,1,opt,name=film_id,json=filmId,proto3" json:"film_id,omitempty"`
	PlaceId uint64 `protobuf:"varint,2,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
}

func (x *TicketCreateRequest) Reset() {
	*x = TicketCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketCreateRequest) ProtoMessage() {}

func (x *TicketCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketCreateRequest.ProtoReflect.Descriptor instead.
func (*TicketCreateRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{8}
}

func (x *TicketCreateRequest) GetFilmId() uint64 {
	if x != nil {
		return x.FilmId
	}
	return 0
}

func (x *TicketCreateRequest) GetPlaceId() uint64 {
	if x != nil {
		return x.PlaceId
	}
	return 0
}

type TicketCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *TicketCreateResponse) Reset() {
	*x = TicketCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketCreateResponse) ProtoMessage() {}

func (x *TicketCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketCreateResponse.ProtoReflect.Descriptor instead.
func (*TicketCreateResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{9}
}

func (x *TicketCreateResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type TicketDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId uint64 `protobuf:"varint,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *TicketDeleteRequest) Reset() {
	*x = TicketDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketDeleteRequest) ProtoMessage() {}

func (x *TicketDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketDeleteRequest.ProtoReflect.Descriptor instead.
func (*TicketDeleteRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{10}
}

func (x *TicketDeleteRequest) GetTicketId() uint64 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

type TicketDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TicketDeleteResponse) Reset() {
	*x = TicketDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketDeleteResponse) ProtoMessage() {}

func (x *TicketDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketDeleteResponse.ProtoReflect.Descriptor instead.
func (*TicketDeleteResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{11}
}

type MyTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyTicketsRequest) Reset() {
	*x = MyTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyTicketsRequest) ProtoMessage() {}

func (x *MyTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyTicketsRequest.ProtoReflect.Descriptor instead.
func (*MyTicketsRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{12}
}

type MyTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *MyTicketsResponse) Reset() {
	*x = MyTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyTicketsResponse) ProtoMessage() {}

func (x *MyTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyTicketsResponse.ProtoReflect.Descriptor instead.
func (*MyTicketsResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{13}
}

func (x *MyTicketsResponse) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type FilmRoomResponse_Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Places []*FilmRoomResponse_Place `protobuf:"bytes,3,rep,name=places,proto3" json:"places,omitempty"`
}

func (x *FilmRoomResponse_Room) Reset() {
	*x = FilmRoomResponse_Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmRoomResponse_Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmRoomResponse_Room) ProtoMessage() {}

func (x *FilmRoomResponse_Room) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmRoomResponse_Room.ProtoReflect.Descriptor instead.
func (*FilmRoomResponse_Room) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{7, 0}
}

func (x *FilmRoomResponse_Room) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FilmRoomResponse_Room) GetPlaces() []*FilmRoomResponse_Place {
	if x != nil {
		return x.Places
	}
	return nil
}

type FilmRoomResponse_Place struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsMy   bool   `protobuf:"varint,2,opt,name=isMy,proto3" json:"isMy,omitempty"`
	IsFree bool   `protobuf:"varint,3,opt,name=isFree,proto3" json:"isFree,omitempty"`
}

func (x *FilmRoomResponse_Place) Reset() {
	*x = FilmRoomResponse_Place{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmRoomResponse_Place) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmRoomResponse_Place) ProtoMessage() {}

func (x *FilmRoomResponse_Place) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmRoomResponse_Place.ProtoReflect.Descriptor instead.
func (*FilmRoomResponse_Place) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{7, 1}
}

func (x *FilmRoomResponse_Place) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FilmRoomResponse_Place) GetIsMy() bool {
	if x != nil {
		return x.IsMy
	}
	return false
}

func (x *FilmRoomResponse_Place) GetIsFree() bool {
	if x != nil {
		return x.IsFree
	}
	return false
}

var File_client_proto protoreflect.FileDescriptor

var file_client_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c,
	0x6d, 0x12, 0x31, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x21, 0x92,
	0x41, 0x1e, 0x2a, 0x0f, 0x49, 0x44, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1,
	0x81, 0xd0, 0xb8, 0x4a, 0x01, 0x31, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x5c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x48, 0x92, 0x41, 0x45, 0x2a, 0x1d, 0xd0, 0x9d, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0,
	0xb2, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xbb,
	0xd1, 0x8c, 0xd0, 0xbc, 0xd0, 0xb0, 0x4a, 0x1b, 0x22, 0xd0, 0xa7, 0xd0, 0xb5, 0xd0, 0xbb, 0xd0,
	0xbe, 0xd0, 0xb2, 0xd0, 0xb5, 0xd0, 0xba, 0x20, 0xd0, 0xbf, 0xd0, 0xb0, 0xd1, 0x83, 0xd0, 0xba,
	0x20, 0x32, 0x22, 0xa2, 0x02, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x31, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x21, 0x92, 0x41, 0x1e, 0x2a, 0x0f,
	0x49, 0x44, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xb8, 0x4a,
	0x01, 0x31, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x39, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x21, 0x92, 0x41, 0x1e, 0x2a, 0x0f, 0x49, 0x44, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf,
	0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xb8, 0x4a, 0x01, 0x32, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x21, 0x92, 0x41, 0x1e,
	0x2a, 0x0f, 0x49, 0x44, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0,
	0xb8, 0x4a, 0x01, 0x33, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x21, 0x92, 0x41, 0x1e, 0x2a, 0x0f, 0x49, 0x44,
	0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xb8, 0x4a, 0x01, 0x34,
	0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x3f, 0x92, 0x41, 0x3c, 0x2a, 0x1f, 0xd0, 0x98, 0xd0, 0xbc, 0xd1,
	0x8f, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2,
	0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x4a, 0x09, 0x22, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x22, 0xd2, 0x01, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0xa2, 0x02, 0x06, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x10,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0xab, 0x01, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x94, 0x01, 0x92, 0x41, 0x90, 0x01, 0x2a, 0x36, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1,
	0x83, 0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xb9, 0x20, 0xd1, 0x82, 0xd0, 0xbe,
	0xd0, 0xba, 0xd0, 0xb5, 0xd0, 0xbd, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0,
	0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x32,
	0x43, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0,
	0xb8, 0xd0, 0xb5, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0xd0, 0xb4, 0xd0, 0xbb, 0xd1, 0x8f,
	0x20, 0xd0, 0xbe, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb0, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd1,
	0x8b, 0xd1, 0x85, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xbe, 0xd1, 0x81,
	0xd0, 0xbe, 0xd0, 0xb2, 0x4a, 0x08, 0x22, 0x69, 0x76, 0x61, 0x6e, 0x2d, 0x31, 0x22, 0xa2, 0x02,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xbb,
	0x02, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x65, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x4f,
	0x92, 0x41, 0x4c, 0x2a, 0x3d, 0xd0, 0x9f, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0,
	0xb5, 0xd1, 0x82, 0xd1, 0x80, 0x20, 0xd1, 0x81, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c,
	0xd0, 0xba, 0xd0, 0xbe, 0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xb1, 0xd1, 0x80, 0xd0, 0xb0, 0xd1,
	0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xb5,
	0xd0, 0xb9, 0x4a, 0x01, 0x35, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x66, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x4e, 0x92, 0x41, 0x4b, 0x2a, 0x3c, 0xd0, 0x9f, 0xd0,
	0xb0, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x82, 0xd1, 0x80, 0x20, 0xd1, 0x81,
	0x20, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xb9, 0x20, 0xd0, 0xb7, 0xd0, 0xb0,
	0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xb8, 0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xb2, 0xd0,
	0xbe, 0xd0, 0xb4, 0xd0, 0xb8, 0xd1, 0x82, 0xd1, 0x8c, 0x4a, 0x01, 0x32, 0xa2, 0x02, 0x07, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x5c,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x48, 0x92, 0x41,
	0x45, 0x2a, 0x2b, 0xd0, 0xa2, 0xd0, 0xb8, 0xd0, 0xbf, 0x20, 0xd1, 0x81, 0xd0, 0xbe, 0xd1, 0x80,
	0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xba, 0xd0, 0xb8, 0x20, 0xd0,
	0xbf, 0xd0, 0xbe, 0x20, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x4a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xa2, 0x02, 0x07, 0x62,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x89, 0x01, 0x0a,
	0x0d, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x42, 0x52,
	0x92, 0x41, 0x4f, 0x2a, 0x1b, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0,
	0xba, 0x20, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbc, 0xd0, 0xbe, 0xd0, 0xb2,
	0x32, 0x30, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd,
	0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd1, 0x81, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xba, 0xd0,
	0xbe, 0xd0, 0xb2, 0x20, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbc, 0xd0, 0xbe,
	0xd0, 0xb2, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x22, 0x4d, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x6d,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x21, 0x92, 0x41,
	0x1e, 0x2a, 0x0f, 0x49, 0x44, 0x20, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbc,
	0xd0, 0xb0, 0x4a, 0x01, 0x35, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x22, 0xed, 0x05, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x6d,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x6d, 0x12, 0x35, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x1a, 0xd6, 0x01, 0x0a, 0x04, 0x52, 0x6f,
	0x6f, 0x6d, 0x12, 0x31, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x21,
	0x92, 0x41, 0x1e, 0x2a, 0x0f, 0x49, 0x44, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd0, 0xb8,
	0xd1, 0x81, 0xd0, 0xb8, 0x4a, 0x01, 0x31, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x52, 0x02, 0x69, 0x64, 0x12, 0x9a, 0x01, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x5e, 0x92, 0x41, 0x5b, 0x2a,
	0x21, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0, 0xba, 0x20, 0xd0, 0xbc,
	0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbb,
	0xd0, 0xb5, 0x32, 0x36, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0, 0xba,
	0x20, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xb7, 0xd0,
	0xb0, 0xd0, 0xbb, 0xd0, 0xb5, 0x20, 0xd0, 0xba, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xbe, 0xd1, 0x82,
	0xd0, 0xb5, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb0, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x1a, 0xa2, 0x03, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x4f, 0x92, 0x41, 0x4c, 0x2a, 0x0f, 0x49,
	0x44, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xb8, 0x32, 0x2b,
	0xd0, 0x9c, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xbe, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xb7,
	0xd0, 0xb0, 0xd0, 0xbb, 0xd0, 0xb5, 0x20, 0xd0, 0xba, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xbe, 0xd1,
	0x82, 0xd0, 0xb5, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb0, 0x4a, 0x02, 0x31, 0x30, 0xa2,
	0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x02, 0x69, 0x64, 0x12, 0x9b, 0x01,
	0x0a, 0x04, 0x69, 0x73, 0x4d, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x86, 0x01, 0x92,
	0x41, 0x82, 0x01, 0x2a, 0x16, 0xd0, 0x9c, 0xd0, 0xbe, 0xd0, 0xb5, 0x20, 0xd0, 0xbb, 0xd0, 0xb8,
	0x20, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xbe, 0x32, 0x57, 0xd0, 0x9f, 0xd1,
	0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb0, 0xd0, 0xb4, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb6, 0xd0,
	0xb8, 0xd1, 0x82, 0x20, 0xd0, 0xbb, 0xd0, 0xb8, 0x20, 0xd1, 0x8d, 0xd1, 0x82, 0xd0, 0xbe, 0x20,
	0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xbe, 0x20, 0xd1, 0x82, 0xd0, 0xb5, 0xd0,
	0xba, 0xd1, 0x83, 0xd1, 0x89, 0xd0, 0xb5, 0xd0, 0xbc, 0xd1, 0x83, 0x20, 0xd0, 0xbf, 0xd0, 0xbe,
	0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5,
	0xd0, 0xbb, 0xd1, 0x8e, 0x4a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xa2, 0x02, 0x07, 0x62, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x04, 0x69, 0x73, 0x4d, 0x79, 0x12, 0x99, 0x01, 0x0a, 0x06,
	0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x80, 0x01, 0x92,
	0x41, 0x7d, 0x2a, 0x20, 0xd0, 0x9c, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xbe, 0x20, 0xd1,
	0x81, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb1, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xbd, 0xd0, 0xbe, 0x20,
	0xd0, 0xbb, 0xd0, 0xb8, 0x32, 0x49, 0xd0, 0x95, 0xd1, 0x81, 0xd0, 0xbb, 0xd0, 0xb8, 0x20, 0xd0,
	0xbc, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xbe, 0x20, 0xd1, 0x81, 0xd0, 0xb2, 0xd0, 0xbe,
	0xd0, 0xb1, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xbd, 0xd0, 0xbe, 0x2c, 0x20, 0xd1, 0x82, 0xd0, 0xbe,
	0x20, 0xd0, 0xb5, 0xd0, 0xb3, 0xd0, 0xbe, 0x20, 0xd0, 0xbc, 0xd0, 0xbe, 0xd0, 0xb6, 0xd0, 0xbd,
	0xd0, 0xbe, 0x20, 0xd0, 0xba, 0xd1, 0x83, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x82, 0xd1, 0x8c, 0x4a,
	0x04, 0x74, 0x72, 0x75, 0x65, 0xa2, 0x02, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52,
	0x06, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x13, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x7a, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x61, 0x92, 0x41, 0x5e, 0x2a, 0x0f, 0x49, 0x44, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf,
	0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xb8, 0x32, 0x3e, 0xd0, 0xa4, 0xd0, 0xb8, 0xd0, 0xbb, 0xd1, 0x8c,
	0xd0, 0xbc, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0xba, 0xd0, 0xbe, 0xd1, 0x82, 0xd0, 0xbe,
	0xd1, 0x80, 0xd1, 0x8b, 0xd0, 0xb9, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xba, 0xd1, 0x83, 0xd0,
	0xbf, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0xd1, 0x81, 0xd1, 0x8f, 0x20, 0xd0, 0xb1, 0xd0, 0xb8,
	0xd0, 0xbb, 0xd0, 0xb5, 0xd1, 0x82, 0x4a, 0x01, 0x34, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x45, 0x92,
	0x41, 0x42, 0x2a, 0x0f, 0x49, 0x44, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1,
	0x81, 0xd0, 0xb8, 0x32, 0x22, 0xd0, 0x9c, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xbe, 0x20,
	0xd0, 0xb2, 0x20, 0xd0, 0xba, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xbe, 0xd1, 0x82, 0xd0, 0xb5, 0xd0,
	0xb0, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb5, 0x4a, 0x01, 0x38, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x42, 0x0a,
	0x14, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x09, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x55, 0x92, 0x41,
	0x52, 0x2a, 0x0f, 0x49, 0x44, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81,
	0xd0, 0xb8, 0x32, 0x31, 0xd0, 0x91, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0,
	0xba, 0xd0, 0xbe, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd1, 0x8b, 0xd0, 0xb9, 0x20, 0xd0, 0xb1,
	0xd1, 0x83, 0xd0, 0xb4, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd1, 0x83, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0,
	0xbb, 0xd0, 0xb5, 0xd0, 0xbd, 0x4a, 0x02, 0x31, 0x30, 0xa2, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x11, 0x4d, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7d, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x4f, 0x92, 0x41, 0x4c, 0x2a, 0x24, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0,
	0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0, 0xba, 0x20, 0xd0, 0xbc, 0xd0, 0xbe, 0xd0, 0xb8, 0xd1, 0x85,
	0x20, 0xd0, 0xb1, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb5, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0x32,
	0x24, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0, 0xba, 0x20, 0xd0, 0xbc,
	0xd0, 0xbe, 0xd0, 0xb8, 0xd1, 0x85, 0x20, 0xd0, 0xb1, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb5, 0xd1,
	0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x32, 0x81,
	0x09, 0x0a, 0x0e, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x12, 0xb2, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0d, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x3a, 0x01, 0x2a, 0x92, 0x41,
	0x55, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x42, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb,
	0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x20, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xba, 0xd1, 0x83, 0xd1, 0x89, 0xd0, 0xb5, 0xd0,
	0xb3, 0xd0, 0xbe, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe,
	0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x2a, 0x08, 0x67, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0xa3, 0x01, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x6d, 0x73,
	0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x92, 0x41, 0x4f, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x6d, 0x12, 0x2f, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0, 0xba, 0x20,
	0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbc, 0xd0, 0xbe, 0xd0, 0xb2, 0x20, 0xd0,
	0xb4, 0xd0, 0xbb, 0xd1, 0x8f, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7,
	0xd0, 0xb0, 0x2a, 0x08, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x62, 0x0c, 0x0a, 0x0a,
	0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x30, 0x01, 0x12, 0xae, 0x01, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x92, 0x41, 0x44, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x12,
	0x21, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0, 0xba, 0x20, 0xd0, 0xbc,
	0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbb,
	0xd0, 0xb5, 0x2a, 0x0b, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x62,
	0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x12, 0xef, 0x01,
	0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x9b, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x69, 0x6c, 0x6d, 0x73, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x7b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x92,
	0x41, 0x6d, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x47, 0xd0, 0x9f, 0xd0, 0xbe,
	0xd0, 0xba, 0xd1, 0x83, 0xd0, 0xbf, 0xd0, 0xba, 0xd0, 0xb0, 0x20, 0xd0, 0xb1, 0xd0, 0xb8, 0xd0,
	0xbb, 0xd0, 0xb5, 0xd1, 0x82, 0xd0, 0xb0, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xba, 0xd0, 0xb8, 0xd0,
	0xbd, 0xd0, 0xbe, 0x28, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbc, 0x2c, 0x20,
	0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbb, 0x2c, 0x20, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82,
	0xd0, 0xbe, 0x29, 0x2a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x12,
	0xb5, 0x01, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x92, 0x41, 0x41, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b,
	0xd0, 0xa3, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5,
	0x20, 0xd0, 0xb1, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb5, 0xd1, 0x82, 0x2a, 0x0c, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x12, 0xb8, 0x01, 0x0a, 0x09, 0x4d, 0x79, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4d, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x79, 0x2d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x92, 0x41, 0x55, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x34, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0,
	0xba, 0x20, 0xd0, 0xb1, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb5, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2,
	0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0,
	0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x2a, 0x09, 0x6d, 0x79, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x12, 0x00, 0x42, 0xad, 0x02, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x6f, 0x7a,
	0x6f, 0x6e, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x42, 0x64, 0x69, 0x64, 0x6f, 0x38, 0x36, 0x2f, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x2d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x3b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x92, 0x41, 0xec, 0x01, 0x12, 0x66, 0x0a, 0x14, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x20,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x36,
	0xd0, 0xa1, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb2, 0xd0, 0xb8, 0xd1, 0x81, 0x20, 0xd0, 0xbf, 0xd0,
	0xbe, 0xd0, 0xba, 0xd1, 0x83, 0xd0, 0xbf, 0xd0, 0xba, 0xd0, 0xb8, 0x20, 0xd0, 0xb1, 0xd0, 0xb8,
	0xd0, 0xbb, 0xd0, 0xb5, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xba,
	0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xbe, 0x22, 0x11, 0x0a, 0x0f, 0x42, 0x61, 0x72, 0x61, 0x6e, 0x6f,
	0x76, 0x20, 0x44, 0x6d, 0x69, 0x74, 0x72, 0x69, 0x69, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x1a, 0x0e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x39, 0x30, 0x22, 0x01,
	0x2f, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x19, 0x0a, 0x03, 0x34, 0x30, 0x31, 0x12,
	0x12, 0x0a, 0x10, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x52, 0x14, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x0d, 0x0a, 0x0b, 0x42, 0x61,
	0x64, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5a, 0x17, 0x0a, 0x15, 0x0a, 0x06, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x0b, 0x08, 0x02, 0x1a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x20, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData = file_client_proto_rawDesc
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_proto_rawDescData)
	})
	return file_client_proto_rawDescData
}

var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_client_proto_goTypes = []interface{}{
	(*Film)(nil),                   // 0: api_client.Film
	(*Ticket)(nil),                 // 1: api_client.Ticket
	(*UserAuthRequest)(nil),        // 2: api_client.UserAuthRequest
	(*UserAuthResponse)(nil),       // 3: api_client.UserAuthResponse
	(*FilmsRequest)(nil),           // 4: api_client.FilmsRequest
	(*FilmsResponse)(nil),          // 5: api_client.FilmsResponse
	(*FilmRoomRequest)(nil),        // 6: api_client.FilmRoomRequest
	(*FilmRoomResponse)(nil),       // 7: api_client.FilmRoomResponse
	(*TicketCreateRequest)(nil),    // 8: api_client.TicketCreateRequest
	(*TicketCreateResponse)(nil),   // 9: api_client.TicketCreateResponse
	(*TicketDeleteRequest)(nil),    // 10: api_client.TicketDeleteRequest
	(*TicketDeleteResponse)(nil),   // 11: api_client.TicketDeleteResponse
	(*MyTicketsRequest)(nil),       // 12: api_client.MyTicketsRequest
	(*MyTicketsResponse)(nil),      // 13: api_client.MyTicketsResponse
	(*FilmRoomResponse_Room)(nil),  // 14: api_client.FilmRoomResponse.Room
	(*FilmRoomResponse_Place)(nil), // 15: api_client.FilmRoomResponse.Place
}
var file_client_proto_depIdxs = []int32{
	0,  // 0: api_client.FilmsResponse.film:type_name -> api_client.Film
	0,  // 1: api_client.FilmRoomResponse.film:type_name -> api_client.Film
	14, // 2: api_client.FilmRoomResponse.room:type_name -> api_client.FilmRoomResponse.Room
	1,  // 3: api_client.TicketCreateResponse.ticket:type_name -> api_client.Ticket
	1,  // 4: api_client.MyTicketsResponse.tickets:type_name -> api_client.Ticket
	15, // 5: api_client.FilmRoomResponse.Room.places:type_name -> api_client.FilmRoomResponse.Place
	2,  // 6: api_client.CinemaFrontend.UserAuth:input_type -> api_client.UserAuthRequest
	4,  // 7: api_client.CinemaFrontend.Films:input_type -> api_client.FilmsRequest
	6,  // 8: api_client.CinemaFrontend.FilmRoom:input_type -> api_client.FilmRoomRequest
	8,  // 9: api_client.CinemaFrontend.TicketCreate:input_type -> api_client.TicketCreateRequest
	10, // 10: api_client.CinemaFrontend.TicketDelete:input_type -> api_client.TicketDeleteRequest
	12, // 11: api_client.CinemaFrontend.MyTickets:input_type -> api_client.MyTicketsRequest
	3,  // 12: api_client.CinemaFrontend.UserAuth:output_type -> api_client.UserAuthResponse
	5,  // 13: api_client.CinemaFrontend.Films:output_type -> api_client.FilmsResponse
	7,  // 14: api_client.CinemaFrontend.FilmRoom:output_type -> api_client.FilmRoomResponse
	9,  // 15: api_client.CinemaFrontend.TicketCreate:output_type -> api_client.TicketCreateResponse
	11, // 16: api_client.CinemaFrontend.TicketDelete:output_type -> api_client.TicketDeleteResponse
	13, // 17: api_client.CinemaFrontend.MyTickets:output_type -> api_client.MyTicketsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Film); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmRoomResponse_Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmRoomResponse_Place); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_rawDesc = nil
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}
