{
  "swagger": "2.0",
  "info": {
    "title": "Movie ticket booking",
    "description": "Сервис покупки билетов в кино",
    "version": "1.0",
    "contact": {
      "name": "Baranov Dmitrii"
    }
  },
  "tags": [
    {
      "name": "Cinema"
    }
  ],
  "host": "localhost:8090",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth": {
      "post": {
        "summary": "Получение token текущего пользователя",
        "operationId": "getToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserAuthResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {}
          },
          "401": {
            "description": "Token is invalid",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUserAuthRequest"
            }
          }
        ],
        "tags": [
          "token"
        ]
      }
    },
    "/v1/films": {
      "get": {
        "summary": "Список фильмов для показа",
        "operationId": "getFilms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiFilmsResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {}
          },
          "401": {
            "description": "Token is invalid",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "film"
        ]
      }
    },
    "/v1/films/{filmId}/room": {
      "get": {
        "summary": "Список мест в зале",
        "operationId": "getFilmRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiFilmRoomResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {}
          },
          "401": {
            "description": "Token is invalid",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filmId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "film"
        ]
      }
    },
    "/v1/films/{filmId}/room/{placeId}": {
      "post": {
        "summary": "Покупка билета в кино(фильм, зал, место)",
        "operationId": "createTicket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTicketCreateResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {}
          },
          "401": {
            "description": "Token is invalid",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filmId",
            "description": "Фильм на который покупается билет",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "placeId",
            "description": "Место в кинотеатре",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ticket"
        ]
      }
    },
    "/v1/my-tickets": {
      "get": {
        "summary": "Список билетов пользователя",
        "operationId": "myTickets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiMyTicketsResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {}
          },
          "401": {
            "description": "Token is invalid",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/v1/ticket/{ticketId}": {
      "delete": {
        "summary": "Удаление билет",
        "operationId": "deleteTicket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTicketDeleteResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {}
          },
          "401": {
            "description": "Token is invalid",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ticketId",
            "description": "Билет который будет удален",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ticket"
        ]
      }
    }
  },
  "definitions": {
    "FilmRoomResponsePlace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "integer",
          "example": 10,
          "description": "Место в зале кинотеатра",
          "title": "ID записи"
        },
        "isMy": {
          "type": "boolean",
          "format": "boolean",
          "example": false,
          "description": "Принадлежит ли это место текущему пользователю",
          "title": "Мое ли место"
        },
        "isFree": {
          "type": "boolean",
          "format": "boolean",
          "example": true,
          "description": "Если место свободно, то его можно купить",
          "title": "Место свободно ли"
        }
      }
    },
    "FilmRoomResponseRoom": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "integer",
          "example": 1,
          "title": "ID записи"
        },
        "places": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilmRoomResponsePlace"
          },
          "description": "Список мест в зале кинотеатра",
          "title": "Список мест в зале"
        }
      }
    },
    "apiFilm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "integer",
          "example": 1,
          "title": "ID записи"
        },
        "name": {
          "type": "string",
          "format": "string",
          "example": "Человек паук 2",
          "title": "Название фильма"
        }
      }
    },
    "apiFilmRoomResponse": {
      "type": "object",
      "properties": {
        "film": {
          "$ref": "#/definitions/apiFilm"
        },
        "room": {
          "$ref": "#/definitions/FilmRoomResponseRoom"
        }
      }
    },
    "apiFilmsResponse": {
      "type": "object",
      "properties": {
        "films": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiFilm"
          },
          "description": "Получение списков фильмов",
          "title": "Список фильмов"
        }
      }
    },
    "apiMyTicketsResponse": {
      "type": "object",
      "properties": {
        "tickets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiTicket"
          },
          "description": "Список моих билетов",
          "title": "Список моих билетов"
        }
      }
    },
    "apiTicket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "integer",
          "example": 1,
          "title": "ID записи"
        },
        "filmId": {
          "type": "string",
          "format": "integer",
          "example": 2,
          "title": "ID записи"
        },
        "roomId": {
          "type": "string",
          "format": "integer",
          "example": 3,
          "title": "ID записи"
        },
        "placeId": {
          "type": "string",
          "format": "integer",
          "example": 4,
          "title": "ID записи"
        }
      }
    },
    "apiTicketCreateResponse": {
      "type": "object",
      "properties": {
        "ticket": {
          "$ref": "#/definitions/apiTicket"
        }
      }
    },
    "apiTicketDeleteResponse": {
      "type": "object"
    },
    "apiUserAuthRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "string",
          "example": "default",
          "title": "Имя пользователя",
          "required": [
            "name"
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "apiUserAuthResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "format": "string",
          "example": "ivan-1",
          "description": "Получение token для остальных запросов",
          "title": "Полученый токен пользователя"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Token",
      "in": "header"
    }
  }
}
